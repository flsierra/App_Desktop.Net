<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qlcpalf/2Q==
</value>
  </data>
</root>